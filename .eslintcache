[{"C:\\xampp2\\htdocs\\netflixclone\\src\\index.js":"1","C:\\xampp2\\htdocs\\netflixclone\\src\\App.js":"2","C:\\xampp2\\htdocs\\netflixclone\\src\\Tmdb.js":"3","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\MovieRow.js":"4","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\FeaturedMovie.js":"5","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\Header.js":"6"},{"size":197,"mtime":1609268198066,"results":"7","hashOfConfig":"8"},{"size":1863,"mtime":1609303150082,"results":"9","hashOfConfig":"8"},{"size":2756,"mtime":1609292567044,"results":"10","hashOfConfig":"8"},{"size":666,"mtime":1609287075830,"results":"11","hashOfConfig":"8"},{"size":1692,"mtime":1609296746517,"results":"12","hashOfConfig":"8"},{"size":631,"mtime":1609302043240,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1b9ok0b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"C:\\xampp2\\htdocs\\netflixclone\\src\\index.js",[],["31","32"],"C:\\xampp2\\htdocs\\netflixclone\\src\\App.js",["33"],"C:\\xampp2\\htdocs\\netflixclone\\src\\Tmdb.js",["34"],"const API_KEY = '0be0a6640f397109d224ae5178e00e16';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/*\r\n- Originais da Netflix\r\n- Recomendados (trending)\r\n- Em alta (top rated)\r\n- Ação\r\n- Comédia\r\n- Terror\r\n- Romance\r\n- Documentários\r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch (`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch (`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch (`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch (`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch (`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch (`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch (`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch (`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n        if(movieId){\r\n            switch (type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n}","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\MovieRow.js",["35"],"import React from 'react';\r\nimport './MovieRow.css';\r\n\r\nexport default ({ title, items }) => {\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\">\r\n                    {items.results.length > 0 && items.results.map((item, key) => (\r\n                        <div className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\FeaturedMovie.js",["36"],"import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({ item }) => {\r\n    console.log(item)\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for (let i in item.genres) {\r\n        genres.push(item.genres[i].name)\r\n    }\r\n\r\n    return (\r\n        <section className=\"featured\" style={{ background: 'cover', backgroundPosition: 'center', backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})` }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">\r\n                        {item.name}\r\n                    </div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\"> {item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                        <div className=\"featured--description\">{item.overview}</div>\r\n                        <div className=\"featured--buttons\">\r\n                            <a href={`/watch/${item.id}`} className=\"featured--watchbutton\"> ► Assistir</a>\r\n                            <a href={`/list/add${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                        </div>\r\n                        <div className=\"featured--genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\Header.js",["37","38","39"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href =\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" />\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":8,"column":1,"nodeType":"46","endLine":64,"endColumn":2},{"ruleId":"44","severity":1,"message":"47","line":21,"column":1,"nodeType":"46","endLine":83,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":19,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":34,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":19,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":9,"column":21,"nodeType":"50","endLine":9,"endColumn":108},{"ruleId":"48","severity":1,"message":"49","line":14,"column":21,"nodeType":"50","endLine":14,"endColumn":111},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]