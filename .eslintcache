[{"C:\\xampp2\\htdocs\\netflixclone\\src\\index.js":"1","C:\\xampp2\\htdocs\\netflixclone\\src\\App.js":"2","C:\\xampp2\\htdocs\\netflixclone\\src\\Tmdb.js":"3","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\MovieRow.js":"4","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\FeaturedMovie.js":"5","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\Header.js":"6"},{"size":197,"mtime":1609268198066,"results":"7","hashOfConfig":"8"},{"size":1863,"mtime":1609303150082,"results":"9","hashOfConfig":"8"},{"size":2756,"mtime":1609292567044,"results":"10","hashOfConfig":"8"},{"size":1709,"mtime":1609308957718,"results":"11","hashOfConfig":"8"},{"size":1671,"mtime":1609305614116,"results":"12","hashOfConfig":"8"},{"size":631,"mtime":1609302043240,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1b9ok0b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\xampp2\\htdocs\\netflixclone\\src\\index.js",[],["30","31"],"C:\\xampp2\\htdocs\\netflixclone\\src\\App.js",["32"],"import React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb'\nimport './App.css';\nimport MovieRow from './Components/MovieRow';\nimport FeaturedMovie from './Components/FeaturedMovie';\nimport Header from './Components/Header';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState([]);\n  const [blackHeader, setBlackHeader] = useState(false)\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando a lista TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // Pegando os Featured de Séries\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n        if (window.scrollY > 15){\n          setBlackHeader(true)\n        }else {\n          setBlackHeader(false);\n        }\n    }\n    window.addEventListener(\"scroll\", scrollListener);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollListener);\n    }\n  }, [])\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader} />\n\n      {featuredData && <FeaturedMovie item={featuredData} />}\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n      <footer>\n        Desenvolvido com <span role=\"img\" aria-label=\"coração\">❤️</span> por Elvis <br />\n        Direitos de imagem para Netflix<br />\n        Dados obtidos no site da Themoviedb.org\n      </footer>\n    </div>\n  )\n}","C:\\xampp2\\htdocs\\netflixclone\\src\\Tmdb.js",["33"],"const API_KEY = '0be0a6640f397109d224ae5178e00e16';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/*\r\n- Originais da Netflix\r\n- Recomendados (trending)\r\n- Em alta (top rated)\r\n- Ação\r\n- Comédia\r\n- Terror\r\n- Romance\r\n- Documentários\r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch (`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch (`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch (`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch (`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch (`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch (`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch (`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch (`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n        if(movieId){\r\n            switch (type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n}","C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\MovieRow.js",["34"],"C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\FeaturedMovie.js",["35"],"C:\\xampp2\\htdocs\\netflixclone\\src\\Components\\Header.js",["36","37","38"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href =\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" />\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":8,"column":1,"nodeType":"45","endLine":64,"endColumn":2},{"ruleId":"43","severity":1,"message":"46","line":21,"column":1,"nodeType":"45","endLine":83,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":6,"column":1,"nodeType":"45","endLine":47,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":34,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":19,"endColumn":2},{"ruleId":"47","severity":1,"message":"48","line":9,"column":21,"nodeType":"49","endLine":9,"endColumn":108},{"ruleId":"47","severity":1,"message":"48","line":14,"column":21,"nodeType":"49","endLine":14,"endColumn":111},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]